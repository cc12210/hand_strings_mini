{"version":3,"sources":["../../src/mixins/page-scroll.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,iBAAiB,CAAC;AAKjD,MAAM,YAAY,GAAG,UAAU,KAAyB;IACtD,MAAM,IAAI,GAAG,cAAc,EAEvB,CAAC;IAEL,IAAI,CAAC,IAAI;QAAE,OAAO;IAClB,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,CAAC;IAE9B,YAAY,CAAC,OAAO,CAAC,CAAC,QAAkB,EAAE,EAAE;QAC1C,IAAI,OAAO,QAAQ,KAAK,UAAU,EAAE;YAClC,aAAa;YACb,QAAQ,CAAC,KAAK,CAAC,CAAC;SACjB;IACH,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AAEF,eAAe,CAAC,QAAkB,EAAE,EAAE;IACpC,OAAO,QAAQ,CAAC;QACd,QAAQ;YACN,MAAM,IAAI,GAAG,cAAc,EAAgC,CAAC;YAC5D,IAAI,CAAC,IAAI;gBAAE,OAAO;YAClB,MAAM,YAAY,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAEzC,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;gBACpC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;aACtC;iBAAM;gBACL,IAAI,CAAC,YAAY;oBACf,OAAO,IAAI,CAAC,YAAY,KAAK,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;aAC3G;YAED,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACnC,CAAC;QAED,QAAQ;;YACN,MAAM,IAAI,GAAG,cAAc,EAAgC,CAAC;YAC5D,IAAI,CAAC,IAAI;gBAAE,OAAO;YAClB,IAAI,CAAC,YAAY,GAAG,CAAA,MAAA,IAAI,CAAC,YAAY,0CAAE,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,KAAK,QAAQ,CAAC,KAAI,EAAE,CAAC;QACnF,CAAC;KACF,CAAC,CAAC;AACL,CAAC,CAAC","file":"page-scroll.js","sourcesContent":["import { getCurrentPage } from '../common/utils';\n\ntype IPageScrollOption = WechatMiniprogram.Page.IPageScrollOption;\ntype Scroller = (this: WechatMiniprogram.Component.TrivialInstance, event?: IPageScrollOption) => void;\n\nconst onPageScroll = function (event?: IPageScrollOption) {\n  const page = getCurrentPage<{\n    pageScroller: Scroller[];\n  }>();\n\n  if (!page) return;\n  const { pageScroller } = page;\n\n  pageScroller.forEach((scroller: Scroller) => {\n    if (typeof scroller === 'function') {\n      // @ts-ignore\n      scroller(event);\n    }\n  });\n};\n\nexport default (scroller: Scroller) => {\n  return Behavior({\n    attached() {\n      const page = getCurrentPage<{ pageScroller: Scroller[] }>();\n      if (!page) return;\n      const bindScroller = scroller.bind(this);\n\n      if (Array.isArray(page.pageScroller)) {\n        page.pageScroller.push(bindScroller);\n      } else {\n        page.pageScroller =\n          typeof page.onPageScroll === 'function' ? [page.onPageScroll.bind(page), bindScroller] : [bindScroller];\n      }\n\n      page.onPageScroll = onPageScroll;\n    },\n\n    detached() {\n      const page = getCurrentPage<{ pageScroller: Scroller[] }>();\n      if (!page) return;\n      page.pageScroller = page.pageScroller?.filter((item) => item !== scroller) || [];\n    },\n  });\n};\n"]}