{"version":3,"sources":["../../src/input/props.ts"],"names":[],"mappings":"AAEA;;KAEK;AAEL,OAAO,EAAE,YAAY,EAAE,MAAM,QAAQ,CAAC;AACtC,QAAA,MAAM,KAAK,EAAE,YAqMZ,CAAC;AAEF,eAAe,KAAK,CAAC","file":"props.d.ts","sourcesContent":["/* eslint-disable */\n\n/**\n * 该文件为脚本自动生成文件，请勿随意修改。如需修改请联系 PMC\n * */\n\nimport { TdInputProps } from './type';\nconst props: TdInputProps = {\n  /** 文本内容位置，居左/居中/居右 */\n  align: {\n    type: String,\n    value: 'left',\n  },\n  /** 标题输入框布局方式 */\n  layout: {\n    type: String,\n    value: 'horizontal',\n  },\n  /** 是否开启无边框模式 */\n  borderless: {\n    type: Boolean,\n    value: false,\n  },\n  /** 是否可清空 */\n  clearable: {\n    type: null,\n    value: false,\n  },\n  /** 是否禁用输入框 */\n  disabled: {\n    type: Boolean,\n    value: false,\n  },\n  /** 已废弃。错误提示文本，值为空不显示（废弃属性，如果需要，请更为使用 status 和 tips） */\n  errorMessage: {\n    type: String,\n    value: '',\n  },\n  /** 组件类名，用于设置组件外层元素、输入框、占位符、错误信息等元素类名 */\n  externalClasses: {\n    type: Array,\n  },\n  /** 【开发中】指定输入框展示值的格式 */\n  format: {\n    type: null,\n  },\n  /** 左侧文本 */\n  label: {\n    type: String,\n  },\n  /** 用户最多可以输入的字符个数，一个中文汉字表示两个字符长度。`maxcharacter` 和 `maxlength` 二选一使用 */\n  maxcharacter: {\n    type: Number,\n  },\n  /** 用户最多可以输入的文本长度，一个中文等于一个计数长度。值为空，则表示不限制输入长度。`maxcharacter` 和 `maxlength` 二选一使用 */\n  maxlength: {\n    type: Number,\n  },\n  /** 占位符 */\n  placeholder: {\n    type: String,\n    value: undefined,\n  },\n  /** 组件前置图标，值为字符串则表示图标名称 */\n  prefixIcon: {\n    type: null,\n    value: null,\n  },\n  /** 只读状态 */\n  readonly: {\n    type: Boolean,\n    value: false,\n  },\n  /** 输入框尺寸 */\n  size: {\n    type: String,\n    value: 'medium',\n  },\n  /** 输入框状态 */\n  status: {\n    type: String,\n    value: 'default',\n  },\n  /** 后置图标前的后置内容 */\n  suffix: {\n    type: String,\n  },\n  /** 后置文本内容，值为字符串则表示图标名称 */\n  suffixIcon: {\n    type: null,\n    value: null,\n  },\n  /** 输入框下方提示文本，会根据不同的 `status` 呈现不同的样式 */\n  tips: {\n    type: String,\n  },\n  /** 输入框的值 */\n  value: {\n    type: String,\n    optionalTypes: [Number],\n    value: null,\n  },\n  /** 输入框的值，非受控属性 */\n  defaultValue: {\n    type: String,\n    optionalTypes: [Number],\n  },\n  /** input 的类型。<br />具体释义：<br />`text` 文本输入键盘；<br />`number` 数字输入键盘；<br />`idcard` 身份证输入键盘；<br />`digit` 带小数点的数字键盘；<br />`safe-password` 密码安全输入键盘 <a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/safe-password.html\">指引</a>；<br />`nickname` 昵称输入键盘。<br />[小程序官方文档](https://developers.weixin.qq.com/miniprogram/dev/component/input.html) */\n  type: {\n    type: String,\n    value: 'text',\n  },\n  /** 指定 placeholder 的样式 */\n  placeholderStyle: {\n    type: String,\n    value: '',\n  },\n  /** 指定 placeholder 的样式类 */\n  placeholderClass: {\n    type: String,\n    value: 'input-placeholder',\n  },\n  /** 指定光标与键盘的距离，取 input 距离底部的距离和 cursor-spacing 指定的距离的最小值作为光标与键盘的距离 */\n  cursorSpacing: {\n    type: Number,\n    value: 0,\n  },\n  /** (即将废弃，请直接使用 focus )自动聚焦，拉起键盘 */\n  autoFocus: {\n    type: Boolean,\n    value: false,\n  },\n  /** 获取焦点 */\n  focus: {\n    type: Boolean,\n    value: false,\n  },\n  /** 设置键盘右下角按钮的文字，仅在type='text'时生效。<br />具体释义：<br />`send` 右下角按钮为“发送”；<br />`search` 右下角按钮为“搜索”；<br />`next` 右下角按钮为“下一个”；<br />`go` 右下角按钮为“前往”；<br />`done` 右下角按钮为“完成”。<br />[小程序官方文档](https://developers.weixin.qq.com/miniprogram/dev/component/input.html) */\n  confirmType: {\n    type: String,\n    value: 'done',\n  },\n  /** 强制 input 处于同层状态，默认 focus 时 input 会切到非同层状态 (仅在 iOS 下生效) */\n  alwaysEmbed: {\n    type: Boolean,\n    value: false,\n  },\n  /** 点击键盘右下角按钮时是否保持键盘不收起 */\n  confirmHold: {\n    type: Boolean,\n    value: false,\n  },\n  /** 指定focus时的光标位置 */\n  cursor: {\n    type: Number,\n  },\n  /** 光标起始位置，自动聚集时有效，需与selection-end搭配使用 */\n  selectionStart: {\n    type: Number,\n    value: -1,\n  },\n  /** 光标结束位置，自动聚集时有效，需与selection-start搭配使用 */\n  selectionEnd: {\n    type: Number,\n    value: -1,\n  },\n  /** 键盘弹起时，是否自动上推页面 */\n  adjustPosition: {\n    type: Boolean,\n    value: true,\n  },\n  /** focus时，点击页面的时候不收起键盘 */\n  holdKeyboard: {\n    type: Boolean,\n    value: false,\n  },\n  /** 安全键盘加密公钥的路径，只支持包内路径 */\n  safePasswordCertPath: {\n    type: String,\n    value: '',\n  },\n  /** 安全键盘输入密码长度 */\n  safePasswordLength: {\n    type: Number,\n  },\n  /** 安全键盘加密时间戳 */\n  safePasswordTimeStamp: {\n    type: Number,\n  },\n  /** 安全键盘加密盐值 */\n  safePasswordNonce: {\n    type: String,\n    value: '',\n  },\n  /** 安全键盘计算hash盐值，若指定custom-hash 则无效 */\n  safePasswordSalt: {\n    type: String,\n    value: '',\n  },\n  /** 安全键盘计算hash的算法表达式，如 `md5(sha1('foo' + sha256(sm3(password + 'bar'))))` */\n  safePasswordCustomHash: {\n    type: String,\n    value: '',\n  },\n};\n\nexport default props;\n"]}