{"version":3,"sources":["../../src/dropdown-menu/dropdown-menu.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,gBAAgB,EAAE,cAAc,EAAe,MAAM,qBAAqB,CAAC;AAGpF,OAAO,KAAK,EAAE,mBAAmB,EAAE,MAAM,QAAQ,CAAC;AAKlD,MAAM,WAAW,iBAAkB,SAAQ,mBAAmB;CAAG;AAGjE,MAAM,CAAC,OAAO,OAAO,YAAa,SAAQ,cAAc;IACtD,eAAe,WAAgG;IAE/G,UAAU,sBAAS;IAEnB,KAAK,MAAQ;IAEb,IAAI;;;;;;MAMF;IAEF,SAAS,EAAE,gBAAgB,CAIzB;IAEF,SAAS;;MAIP;IAEF,OAAO;sBACS,MAAM;;wBAiDJ,kBAAkB,SAAS;MAK3C;CACH","file":"dropdown-menu.d.ts","sourcesContent":["import { RelationsOptions, SuperComponent, wxComponent } from '../common/src/index';\nimport config from '../common/config';\nimport props from './props';\nimport type { TdDropdownMenuProps } from './type';\n\nconst { prefix } = config;\nconst name = `${prefix}-dropdown-menu`;\n\nexport interface DropdownMenuProps extends TdDropdownMenuProps {}\n\n@wxComponent()\nexport default class DropdownMenu extends SuperComponent {\n  externalClasses = [`${prefix}-class`, `${prefix}-class-item`, `${prefix}-class-label`, `${prefix}-class-icon`];\n\n  properties = props; // todo: zindex\n\n  nodes = null;\n\n  data = {\n    prefix,\n    classPrefix: name,\n    menus: null,\n    activeIdx: -1,\n    bottom: 0,\n  };\n\n  relations: RelationsOptions = {\n    '../dropdown-item/dropdown-item': {\n      type: 'child',\n    },\n  };\n\n  lifetimes = {\n    ready() {\n      this.getAllItems();\n    },\n  };\n\n  methods = {\n    toggle(index: number) {\n      const { activeIdx, duration } = this.data;\n      const prevItem = this.$children[activeIdx];\n      const currItem = this.$children[index];\n\n      if (currItem?.data.disabled) return;\n\n      if (activeIdx !== -1) {\n        prevItem.triggerEvent('close');\n        prevItem.setData(\n          {\n            show: false,\n          },\n          () => {\n            setTimeout(() => {\n              prevItem.triggerEvent('closed');\n            }, duration);\n          },\n        );\n      }\n\n      if (index == null || activeIdx === index) {\n        this.setData({\n          activeIdx: -1,\n        });\n      } else {\n        currItem.triggerEvent('open');\n        this.setData({\n          activeIdx: index,\n        });\n        currItem.setData(\n          {\n            show: true,\n          },\n          () => {\n            setTimeout(() => {\n              currItem.triggerEvent('opened');\n            }, duration);\n          },\n        );\n      }\n    },\n    getAllItems() {\n      const menus = this.$children.map(({ data }) => ({ label: data.label, disabled: data.disabled }));\n\n      this.setData({\n        menus,\n      });\n    },\n    handleToggle(e: WechatMiniprogram.BaseEvent) {\n      const { index } = e.currentTarget.dataset;\n\n      this.toggle(index);\n    },\n  };\n}\n"]}