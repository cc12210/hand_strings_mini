{"version":3,"sources":["../../src/checkbox-group/checkbox-group.ts"],"names":[],"mappings":"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","file":"checkbox-group.js","sourcesContent":["import { SuperComponent, wxComponent, RelationsOptions } from '../common/src/index';\nimport config from '../common/config';\nimport props from './props';\n\nconst { prefix } = config;\nconst name = `${prefix}-checkbox-group`;\n@wxComponent()\nexport default class CheckBoxGroup extends SuperComponent {\n  externalClasses = ['class', `${prefix}-class`];\n\n  relations: RelationsOptions = {\n    '../checkbox/checkbox': {\n      type: 'descendant',\n    },\n  };\n\n  data = {\n    prefix,\n    classPrefix: name,\n    checkboxOptions: [],\n  };\n\n  properties = {\n    ...props,\n    borderless: {\n      type: Boolean,\n      value: false,\n    },\n  };\n\n  observers = {\n    value() {\n      this.updateChildren();\n    },\n  };\n\n  lifetimes = {\n    attached() {\n      this.initWithOptions();\n    },\n    ready() {\n      this.setCheckall();\n    },\n  };\n\n  controlledProps = [\n    {\n      key: 'value',\n      event: 'change',\n    },\n  ];\n\n  $checkAll = null; // 全选复选框\n\n  methods = {\n    getChilds() {\n      let items = this.$children;\n      if (!items.length) {\n        items = this.selectAllComponents(`.${prefix}-checkbox-option`);\n      }\n      return items || [];\n    },\n\n    updateChildren() {\n      const items = this.getChilds();\n      const { value } = this.data;\n\n      if (items.length > 0) {\n        items.forEach((item: any) => {\n          !item.data.checkAll &&\n            item.setData({\n              checked: value?.includes(item.data.value),\n            });\n        });\n        // 关联可全选项\n        if (items.some((item) => item.data.checkAll)) {\n          this.setCheckall();\n        }\n      }\n    },\n\n    updateValue({ value, checked, checkAll, indeterminate }) {\n      let { value: newValue } = this.data;\n      const { max } = this.data;\n      const keySet = new Set(this.getChilds().map((item) => item.data.value));\n\n      newValue = newValue.filter((value) => keySet.has(value));\n\n      if (max && checked && newValue.length === max) return;\n\n      if (checkAll) {\n        const items = this.getChilds();\n        newValue =\n          !checked && indeterminate\n            ? items.map((item) => item.data.value)\n            : items\n                .filter(({ data }) => {\n                  if (data.disabled) {\n                    return newValue.includes(data.value);\n                  }\n                  return checked && !data.checkAll;\n                })\n                .map(({ data }) => data.value);\n      } else if (checked) {\n        newValue = newValue.concat(value);\n      } else {\n        const index = newValue.findIndex((v: string) => v === value);\n        newValue.splice(index, 1);\n      }\n\n      this._trigger('change', { value: newValue });\n    },\n\n    initWithOptions() {\n      const { options } = this.data;\n\n      if (!options?.length || !Array.isArray(options)) return;\n\n      const checkboxOptions = options.map((item) => {\n        const isLabel = ['number', 'string'].includes(typeof item);\n        return isLabel\n          ? {\n              label: `${item}`,\n              value: item,\n            }\n          : { ...item };\n      });\n\n      this.setData({\n        checkboxOptions,\n      });\n    },\n\n    handleInnerChildChange(e) {\n      const { item } = e.target.dataset;\n      const { checked } = e.detail;\n      const rect: any = {};\n\n      if (item.checkAll) {\n        rect.indeterminate = this.$checkAll?.data.indeterminate;\n      }\n\n      this.updateValue({ ...item, checked, ...rect });\n    },\n\n    setCheckall() {\n      const items = this.getChilds();\n\n      if (!this.$checkAll) {\n        this.$checkAll = items.find((item) => item.data.checkAll);\n      }\n\n      if (!this.$checkAll) return;\n\n      const { value } = this.data;\n      const valueSet = new Set(value.filter((val) => val !== this.$checkAll.data.value));\n      const isCheckall = items.every((item) => (item.data.checkAll ? true : valueSet.has(item.data.value)));\n\n      this.$checkAll.setData({\n        checked: valueSet.size > 0,\n        indeterminate: !isCheckall,\n      });\n    },\n  };\n}\n"]}