{"version":3,"sources":["../../src/image-viewer/image-viewer.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,cAAc,EAAe,MAAM,qBAAqB,CAAC;AAQlE,MAAM,CAAC,OAAO,OAAO,WAAY,SAAQ,cAAc;IACrD,eAAe,WAAuB;IAEtC,UAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAER;IAEF,IAAI;;;;;;;MAOF;IAEF,OAAO;;MAEL;IAEF,eAAe;;;QAKb;IAEF,KAAK;IAIL,SAAS;;;;MAkBP;IAEF,OAAO;;;;;;;;;;;;;;;;;8BA0CiB,4BAA4B;0BAoBhC,4BAA4B;;;MAkB9C;CACH","file":"image-viewer.d.ts","sourcesContent":["import { styles, calcIcon } from '../common/utils';\nimport { SuperComponent, wxComponent } from '../common/src/index';\nimport config from '../common/config';\nimport props from './props';\n\nconst { prefix } = config;\nconst name = `${prefix}-image-viewer`;\n\n@wxComponent()\nexport default class ImageViewer extends SuperComponent {\n  externalClasses = [`${prefix}-class`];\n\n  properties = {\n    ...props,\n  };\n\n  data = {\n    prefix,\n    classPrefix: name,\n    currentSwiperIndex: 0,\n    windowHeight: 0,\n    windowWidth: 0,\n    imagesShape: {},\n  };\n\n  options = {\n    multipleSlots: true,\n  };\n\n  controlledProps = [\n    {\n      key: 'visible',\n      event: 'close',\n    },\n  ];\n\n  ready() {\n    this.saveScreenSize();\n  }\n\n  observers = {\n    visible(value) {\n      this.setData({\n        currentSwiperIndex: value ? this.properties.initialIndex : 0,\n      });\n    },\n\n    closeBtn(v) {\n      this.setData({\n        _closeBtn: calcIcon(v, 'close'),\n      });\n    },\n\n    deleteBtn(v) {\n      this.setData({\n        _deleteBtn: calcIcon(v, 'delete'),\n      });\n    },\n  };\n\n  methods = {\n    saveScreenSize() {\n      const { windowHeight, windowWidth } = wx.getSystemInfoSync();\n      this.setData({\n        windowHeight,\n        windowWidth,\n      });\n    },\n\n    calcImageDisplayStyle(imageWidth, imageHeight) {\n      const { windowWidth, windowHeight } = this.data;\n      const ratio = imageWidth / imageHeight;\n      // 图片宽高都小于屏幕宽高\n      if (imageWidth < windowWidth && imageHeight < windowHeight) {\n        return {\n          styleObj: {\n            width: `${imageWidth * 2}rpx`,\n            height: `${imageHeight * 2}rpx`,\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n          },\n        };\n      }\n      // 图片宽高至少存在一个大于屏幕宽高，此时判断图片宽高比，按长边显示\n      if (ratio >= 1) {\n        return {\n          styleObj: {\n            width: '100vw',\n            height: `${(windowWidth / ratio) * 2}rpx`,\n          },\n        };\n      }\n      return {\n        styleObj: {\n          width: `${ratio * windowHeight * 2}rpx`,\n          height: '100vh',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n        },\n      };\n    },\n\n    onImageLoadSuccess(e: WechatMiniprogram.TouchEvent) {\n      const {\n        detail: { width, height },\n        currentTarget: {\n          dataset: { index },\n        },\n      } = e;\n      const { mode, styleObj } = this.calcImageDisplayStyle(width, height);\n      const origin = this.data.imagesShape;\n      this.setData({\n        imagesShape: {\n          ...origin,\n          [index]: {\n            mode,\n            style: styles({ ...styleObj }),\n          },\n        },\n      });\n    },\n\n    onSwiperChange(e: WechatMiniprogram.TouchEvent) {\n      const {\n        detail: { current },\n      } = e;\n      this.setData({\n        currentSwiperIndex: current,\n      });\n      this._trigger('change', { index: current });\n    },\n\n    onClose(e) {\n      const { source } = e.currentTarget.dataset;\n      this._trigger('close', { visible: false, trigger: source || 'button', index: this.data.currentSwiperIndex });\n    },\n\n    onDelete() {\n      this._trigger('delete', { index: this.data.currentSwiperIndex });\n    },\n  };\n}\n"]}