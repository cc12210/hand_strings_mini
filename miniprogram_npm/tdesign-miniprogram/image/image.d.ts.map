{"version":3,"sources":["../../src/image/image.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAe,MAAM,qBAAqB,CAAC;AAQlE,MAAM,CAAC,OAAO,OAAO,KAAM,SAAQ,cAAc;IAC/C,eAAe,WAA+C;IAE9D,OAAO;;MAEL;IAEF,UAAU,gCAAc;IAExB,IAAI;;;;;;MAMF;IAEF,MAAM,SAAM;IAEZ,SAAS;;MAgBP;IAEF,SAAS;;MAKP;IAEF,OAAO;oBACO,GAAG;uBAyBA,GAAG;;MAqBlB;CACH","file":"image.d.ts","sourcesContent":["import { SuperComponent, wxComponent } from '../common/src/index';\nimport ImageProps from './props';\nimport config from '../common/config';\nimport { addUnit, getRect } from '../common/utils';\n\nconst { prefix } = config;\nconst name = `${prefix}-image`;\n@wxComponent()\nexport default class Image extends SuperComponent {\n  externalClasses = [`${prefix}-class`, `${prefix}-class-load`];\n\n  options = {\n    multipleSlots: true,\n  };\n\n  properties = ImageProps;\n\n  data = {\n    prefix,\n    isLoading: true,\n    isFailed: false,\n    innerStyle: '',\n    classPrefix: name,\n  };\n\n  preSrc = ''; // 保留上一次的src,防止在src相同时重复update\n\n  lifetimes = {\n    attached() {\n      const { width, height } = this.data;\n      let innerStyle = '';\n      this.update();\n\n      if (width) {\n        innerStyle += `width: ${addUnit(width)};`;\n      }\n      if (height) {\n        innerStyle += `height: ${addUnit(height)};`;\n      }\n      this.setData({\n        innerStyle,\n      });\n    },\n  };\n\n  observers = {\n    src() {\n      if (this.preSrc === this.properties.src) return;\n      this.update();\n    },\n  };\n\n  methods = {\n    onLoaded(e: any) {\n      const sdkVersion = wx.getSystemInfoSync().SDKVersion;\n      const versionArray = sdkVersion.split('.').map((v) => parseInt(v, 10));\n      const { mode } = this.properties;\n      const isInCompatible =\n        versionArray[0] < 2 ||\n        (versionArray[0] === 2 && versionArray[1] < 10) ||\n        (versionArray[0] === 2 && versionArray[1] === 10 && versionArray[2] < 3);\n      // 版本号低于2.10.3时组件内部实现heightFix模式\n      if (mode === 'heightFix' && isInCompatible) {\n        // 实现heightFix模式，保持高度和宽高比，设置对应的宽度\n        const { height: picHeight, width: picWidth } = e.detail;\n        getRect(this, '#image').then((rect) => {\n          const { height } = rect;\n          const resultWidth = ((height / picHeight) * picWidth).toFixed(2);\n          this.setData({ innerStyle: `height: ${addUnit(height)}; width: ${resultWidth}px;` });\n        });\n      }\n      this.setData({\n        isLoading: false,\n        isFailed: false,\n      });\n      this.triggerEvent('load', e.detail);\n    },\n\n    onLoadError(e: any) {\n      this.setData({\n        isLoading: false,\n        isFailed: true,\n      });\n      this.triggerEvent('error', e.detail);\n    },\n\n    update() {\n      const { src } = this.properties;\n      this.preSrc = src;\n      if (!src) {\n        // 链接为空时直接触发加载失败\n        this.onLoadError({ errMsg: '图片链接为空' });\n      } else {\n        this.setData({\n          isLoading: true,\n          isFailed: false,\n        });\n      }\n    },\n  };\n}\n"]}