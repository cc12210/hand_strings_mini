{"version":3,"sources":["../../src/button/button.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAe,MAAM,qBAAqB,CAAC;AAKlE,OAAO,KAAK,EAAE,aAAa,EAAE,MAAM,QAAQ,CAAC;AAK5C,MAAM,WAAW,WAAY,SAAQ,aAAa;CAAG;AAErD,MAAM,CAAC,OAAO,OAAO,MAAO,SAAQ,cAAc;IAChD,eAAe,WAAmF;IAElG,SAAS,WAA8D;IAEvE,UAAU,gBAAS;IAEnB,IAAI;;;;MAIF;IAEF,SAAS;;;MAWP;IAEF,SAAS;;MAIP;IAEF,OAAO;;;;;;;;;;MAkDL;CACH","file":"button.d.ts","sourcesContent":["import { SuperComponent, wxComponent } from '../common/src/index';\nimport config from '../common/config';\nimport props from './props';\nimport { canIUseFormFieldButton } from '../common/version';\nimport { setIcon } from '../common/utils';\nimport type { TdButtonProps } from './type';\n\nconst { prefix } = config;\nconst name = `${prefix}-button`;\n\nexport interface ButtonProps extends TdButtonProps {}\n@wxComponent()\nexport default class Button extends SuperComponent {\n  externalClasses = ['class', `${prefix}-class`, `${prefix}-class-icon`, `${prefix}-class-loading`];\n\n  behaviors = canIUseFormFieldButton() ? ['wx://form-field-button'] : [];\n\n  properties = props;\n\n  data = {\n    prefix,\n    className: '',\n    classPrefix: name,\n  };\n\n  observers = {\n    'theme, size, plain, block, shape, disabled, loading'() {\n      this.setClass();\n    },\n\n    icon(icon) {\n      const obj = setIcon('icon', icon, '');\n      this.setData({\n        ...obj,\n      });\n    },\n  };\n\n  lifetimes = {\n    attached() {\n      this.setClass();\n    },\n  };\n\n  methods = {\n    setClass() {\n      const classList = [\n        name,\n        `${prefix}-class`,\n        `${name}--${this.data.variant || 'base'}`,\n        `${name}--${this.data.theme || 'default'}`,\n        `${name}--${this.data.shape || 'rectangle'}`,\n        `${name}--size-${this.data.size || 'medium'}`,\n      ];\n\n      if (this.data.block) {\n        classList.push(`${name}--block`);\n      }\n      if (this.data.disabled) {\n        classList.push(`${name}--disabled`);\n      }\n      if (this.data.ghost) {\n        classList.push(`${name}--ghost`);\n      }\n      this.setData({\n        className: classList.join(' '),\n      });\n    },\n    getuserinfo(e) {\n      this.triggerEvent('getuserinfo', e.detail);\n    },\n    contact(e) {\n      this.triggerEvent('contact', e.detail);\n    },\n    getphonenumber(e) {\n      this.triggerEvent('getphonenumber', e.detail);\n    },\n    error(e) {\n      this.triggerEvent('error', e.detail);\n    },\n    opensetting(e) {\n      this.triggerEvent('opensetting', e.detail);\n    },\n    launchapp(e) {\n      this.triggerEvent('launchapp', e.detail);\n    },\n    chooseavatar(e) {\n      this.triggerEvent('chooseavatar', e.detail);\n    },\n    handleTap(e) {\n      if (this.data.disabled) return;\n\n      this.triggerEvent('tap', e);\n    },\n  };\n}\n"]}