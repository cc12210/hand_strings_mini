{"version":3,"sources":["../../src/icon/icon.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,cAAc,EAAE,WAAW,EAAE,MAAM,qBAAqB,CAAC;AAClE,OAAO,MAAM,MAAM,kBAAkB,CAAC;AACtC,OAAO,KAAK,MAAM,SAAS,CAAC;AAC5B,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,iBAAiB,CAAC;AAElD,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,CAAC;AAC1B,MAAM,IAAI,GAAG,GAAG,MAAM,OAAO,CAAC;AAG9B,IAAqB,IAAI,GAAzB,MAAqB,IAAK,SAAQ,cAAc;IAAhD;;QACE,oBAAe,GAAG,CAAC,OAAO,EAAE,GAAG,MAAM,QAAQ,CAAC,CAAC;QAE/C,eAAU,GAAG,KAAK,CAAC;QAEnB,SAAI,GAAG;YACL,eAAe,EAAE,MAAM;YACvB,WAAW,EAAE,IAAI;YACjB,OAAO,EAAE,KAAK;YACd,SAAS,EAAE,SAAS;SACrB,CAAC;QAEF,cAAS,GAAG;YACV,0BAA0B;gBACxB,IAAI,CAAC,YAAY,EAAE,CAAC;YACtB,CAAC;SACF,CAAC;QAEF,YAAO,GAAG;YACR,KAAK,CAAC,KAAU;gBACd,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;YAC3C,CAAC;YAED,YAAY;gBACV,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC;gBAC9C,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;gBACzC,MAAM,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;gBAChC,MAAM,SAAS,GAAG,OAAO,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;gBACzE,MAAM,UAAU,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;gBACjD,MAAM,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,WAAW,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;gBACzD,IAAI,CAAC,OAAO,CAAC;oBACX,OAAO;oBACP,SAAS,EAAE,GAAG,MAAM,+CACf,UAAU,GACV,SAAS,GACT,SAAS,EACZ,EAAE;iBACL,CAAC,CAAC;YACL,CAAC;SACF,CAAC;IACJ,CAAC;CAAA,CAAA;AAxCoB,IAAI;IADxB,WAAW,EAAE;GACO,IAAI,CAwCxB;eAxCoB,IAAI","file":"icon.js","sourcesContent":["import { SuperComponent, wxComponent } from '../common/src/index';\nimport config from '../common/config';\nimport props from './props';\nimport { styles, addUnit } from '../common/utils';\n\nconst { prefix } = config;\nconst name = `${prefix}-icon`;\n\n@wxComponent()\nexport default class Icon extends SuperComponent {\n  externalClasses = ['class', `${prefix}-class`];\n\n  properties = props;\n\n  data = {\n    componentPrefix: prefix,\n    classPrefix: name,\n    isImage: false,\n    iconStyle: undefined,\n  };\n\n  observers = {\n    'name, color, size, style'() {\n      this.setIconStyle();\n    },\n  };\n\n  methods = {\n    onTap(event: any) {\n      this.triggerEvent('click', event.detail);\n    },\n\n    setIconStyle() {\n      const { name, color, size } = this.properties;\n      const isImage = name.indexOf('/') !== -1;\n      const sizeValue = addUnit(size);\n      const sizeStyle = isImage ? { width: sizeValue, height: sizeValue } : {};\n      const colorStyle = color ? { color: color } : {};\n      const fontStyle = size ? { 'font-size': sizeValue } : {};\n      this.setData({\n        isImage,\n        iconStyle: `${styles({\n          ...colorStyle,\n          ...fontStyle,\n          ...sizeStyle,\n        })}`,\n      });\n    },\n  };\n}\n"]}