{"version":3,"sources":["../../src/collapse-panel/collapse-panel.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAe,gBAAgB,EAAE,MAAM,qBAAqB,CAAC;AAGpF,OAAO,KAAK,EAAE,oBAAoB,EAAE,MAAM,QAAQ,CAAC;AAMnD,MAAM,WAAW,kBAAmB,SAAQ,oBAAoB;CAAG;AAEnE,MAAM,CAAC,OAAO,OAAO,aAAc,SAAQ,cAAc;IACvD,eAAe,WAA4E;IAE3F,OAAO;;MAEL;IAEF,SAAS,EAAE,gBAAgB,CAezB;IAEF,UAAU,uBAAS;IAEnB,IAAI;;;;;;;MAOF;IAEF,OAAO;kBACK,OAAO,MAAM,EAAE,MAAM,GAAG,GAAG,CAAC;;8BAoBhB,OAAO;;MA2B7B;CACH","file":"collapse-panel.d.ts","sourcesContent":["import { SuperComponent, wxComponent, RelationsOptions } from '../common/src/index';\nimport config from '../common/config';\nimport props from './props';\nimport type { TdCollapsePanelProps } from './type';\nimport { getRect } from '../common/utils';\n\nconst { prefix } = config;\nconst name = `${prefix}-collapse-panel`;\n\nexport interface CollapsePanelProps extends TdCollapsePanelProps {}\n@wxComponent()\nexport default class CollapsePanel extends SuperComponent {\n  externalClasses = [`${prefix}-class`, `${prefix}-class-content`, `${prefix}-class-header`];\n\n  options = {\n    multipleSlots: true,\n  };\n\n  relations: RelationsOptions = {\n    '../collapse/collapse': {\n      type: 'ancestor',\n      linked(target: WechatMiniprogram.Component.TrivialInstance) {\n        this.parent = target;\n        const { value, defaultExpandAll, expandMutex, expandIcon, disabled } = target.properties;\n        const activeValues = defaultExpandAll && !expandMutex ? [this.properties.value] : value;\n\n        this.setData({\n          ultimateExpandIcon: expandIcon || this.properties.expandIcon,\n          ultimateDisabled: this.properties.disabled == null ? disabled : this.properties.disabled,\n        });\n        this.updateExpanded(activeValues);\n      },\n    },\n  };\n\n  properties = props;\n\n  data = {\n    prefix,\n    expanded: false,\n    classPrefix: name,\n    classBasePrefix: prefix,\n    ultimateExpandIcon: false,\n    ultimateDisabled: false,\n  };\n\n  methods = {\n    set(data: Record<string, object | any>) {\n      this.setData(data);\n\n      return new Promise((resolve) => wx.nextTick(resolve));\n    },\n\n    updateExpanded(activeValues) {\n      if (!this.parent) {\n        return;\n      }\n\n      const { value } = this.properties;\n      const expanded = activeValues.includes(value);\n\n      if (expanded === this.properties.expanded) return;\n\n      this.setData({ expanded });\n      this.updateStyle(expanded);\n    },\n\n    updateStyle(expanded: boolean) {\n      return getRect(this, `.${name}__content`)\n        .then((rect: WechatMiniprogram.BoundingClientRectCallbackResult) => rect.height)\n        .then((height: number) => {\n          const animation = wx.createAnimation({\n            duration: 0,\n            timingFunction: 'ease-in-out',\n          });\n\n          if (expanded) {\n            animation.height(height).top(0).step({ duration: 300 }).height('auto').step();\n          } else {\n            animation.height(height).top(1).step({ duration: 1 }).height(0).step({ duration: 300 });\n          }\n\n          this.setData({ animation: animation.export() });\n        });\n    },\n\n    onClick() {\n      const { ultimateDisabled } = this.data;\n      const { value } = this.properties;\n\n      if (ultimateDisabled) return;\n\n      this.parent.switch(value);\n    },\n  };\n}\n"]}