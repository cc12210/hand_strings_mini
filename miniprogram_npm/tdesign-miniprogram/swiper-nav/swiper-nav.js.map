{"version":3,"sources":["../../src/swiper-nav/swiper-nav.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,cAAc,EAAE,WAAW,EAAoB,MAAM,qBAAqB,CAAC;AACpF,OAAO,MAAM,MAAM,kBAAkB,CAAC;AAGtC,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,CAAC;AAC1B,MAAM,IAAI,GAAG,GAAG,MAAM,aAAa,CAAC;AAKpC,IAAqB,SAAS,GAA9B,MAAqB,SAAU,SAAQ,cAAc;IAArD;;QACE,oBAAe,GAAG,CAAC,GAAG,MAAM,QAAQ,CAAC,CAAC;QAEtC,eAAU,GAAG;YACX,OAAO,EAAE;gBACP,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,CAAC;aACT;YACD,KAAK,EAAE;gBACL,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,CAAC;aACT;YACD,IAAI,EAAE;gBACJ,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,MAAM;aACd;YACD,UAAU,EAAE;gBACV,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,CAAC;aACT;YACD,YAAY,EAAE;gBACZ,IAAI,EAAE,OAAO;gBACb,KAAK,EAAE,KAAK;aACb;YACD,SAAS,EAAE;gBACT,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,YAAY;aACpB;YACD,kBAAkB,EAAE;gBAClB,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,QAAQ;aAChB;SACF,CAAC;QAEF,cAAS,GAAqB;YAC5B,kBAAkB,EAAE;gBAClB,IAAI,EAAE,QAAQ;aACf;SACF,CAAC;QAEF,SAAI,GAAG;YACL,MAAM;YACN,WAAW,EAAE,IAAI;SAClB,CAAC;QAEF,YAAO,GAAG;YACR,GAAG,CAAC,CAAC;;gBACH,MAAM,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC;gBACjC,MAAM,MAAM,GAAG,KAAK,CAAC;gBAErB,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,CAAC;gBACnD,IAAI,IAAI,CAAC,OAAO,EAAE;oBAChB,MAAA,IAAI,CAAC,OAAO,0CAAE,cAAc,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;iBAC3C;YACH,CAAC;SACF,CAAC;IACJ,CAAC;CAAA,CAAA;AAxDoB,SAAS;IAD7B,WAAW,EAAE;GACO,SAAS,CAwD7B;eAxDoB,SAAS","file":"swiper-nav.js","sourcesContent":["import { SuperComponent, wxComponent, RelationsOptions } from '../common/src/index';\nimport config from '../common/config';\nimport { TdSwiperNavProps } from './type';\n\nconst { prefix } = config;\nconst name = `${prefix}-swiper-nav`;\n\nexport interface SwiperNavProps extends TdSwiperNavProps {}\n\n@wxComponent()\nexport default class SwiperNav extends SuperComponent {\n  externalClasses = [`${prefix}-class`];\n\n  properties = {\n    current: {\n      type: Number,\n      value: 0,\n    },\n    total: {\n      type: Number,\n      value: 0,\n    },\n    type: {\n      type: String,\n      value: 'dots',\n    },\n    minShowNum: {\n      type: Number,\n      value: 2,\n    },\n    showControls: {\n      type: Boolean,\n      value: false,\n    },\n    direction: {\n      type: String,\n      value: 'horizontal',\n    },\n    paginationPosition: {\n      type: String,\n      value: 'bottom',\n    },\n  };\n\n  relations: RelationsOptions = {\n    '../swiper/swiper': {\n      type: 'parent',\n    },\n  };\n\n  data = {\n    prefix,\n    classPrefix: name,\n  };\n\n  methods = {\n    nav(e) {\n      const { dir } = e.target.dataset;\n      const source = 'nav';\n\n      this.triggerEvent('navBtnChange', { dir, source });\n      if (this.$parent) {\n        this.$parent?.doNavBtnChange(dir, source);\n      }\n    },\n  };\n}\n"]}