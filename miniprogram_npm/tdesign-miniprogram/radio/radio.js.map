{"version":3,"sources":["../../src/radio/radio.ts"],"names":[],"mappings":"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","file":"radio.js","sourcesContent":["import config from '../common/config';\nimport { SuperComponent, wxComponent, RelationsOptions } from '../common/src/index';\nimport Props from './props';\n\nconst { prefix } = config;\nconst name = `${prefix}-radio`;\n\nconst iconDefault = {\n  'fill-circle': ['check-circle-filled', 'circle'],\n  'stroke-line': ['check', ''],\n};\n@wxComponent()\nexport default class Radio extends SuperComponent {\n  externalClasses = [\n    `${prefix}-class`,\n    `${prefix}-class-label`,\n    `${prefix}-class-icon`,\n    `${prefix}-class-content`,\n    `${prefix}-class-border`,\n  ];\n\n  behaviors = ['wx://form-field'];\n\n  parent = null;\n\n  relations: RelationsOptions = {\n    '../radio-group/radio-group': {\n      type: 'ancestor',\n      linked(parent) {\n        this.parent = parent;\n        if (parent.data.align) {\n          this.setData({ align: parent.data.align });\n        }\n        if (parent.data.borderless) {\n          this.setData({ borderless: true });\n        }\n      },\n    },\n  };\n\n  options = {\n    multipleSlots: true,\n  };\n\n  lifetimes = {\n    attached() {\n      this.initStatus();\n    },\n  };\n\n  properties = {\n    ...Props,\n    borderless: {\n      type: Boolean,\n      value: false,\n    },\n  };\n\n  controlledProps = [\n    {\n      key: 'checked',\n      event: 'change',\n    },\n  ];\n\n  data = {\n    prefix,\n    classPrefix: name,\n    customIcon: false,\n    slotIcon: false,\n    optionLinked: false,\n    iconVal: [],\n  };\n\n  methods = {\n    handleTap(e) {\n      if (this.data.disabled) return;\n\n      const { target } = e.currentTarget.dataset;\n\n      if (target === 'text' && this.data.contentDisabled) return;\n\n      this.doChange();\n    },\n    doChange() {\n      const { value, checked } = this.data;\n\n      if (this.$parent) {\n        this.$parent.updateValue(value);\n      } else {\n        this._trigger('change', { checked: !checked });\n      }\n    },\n    initStatus() {\n      const { icon } = this.data;\n      const isIdArr = Array.isArray(this.parent?.icon || icon);\n\n      this.setData({\n        customIcon: isIdArr,\n        slotIcon: icon === 'slot',\n        iconVal: !isIdArr ? iconDefault[icon] : this.data.icon,\n      });\n    },\n\n    setDisabled(disabled: Boolean) {\n      this.setData({\n        disabled: this.data.disabled || disabled,\n      });\n    },\n  };\n}\n"]}