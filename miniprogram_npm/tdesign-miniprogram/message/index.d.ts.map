{"version":3,"sources":["../../src/message/index.ts"],"names":[],"mappings":";;;AAAA,OAAO,EAAe,YAAY,EAAE,MAAM,qBAAqB,CAAC;AAGhE,aAAK,OAAO,GAAG,iBAAiB,CAAC,IAAI,CAAC,eAAe,GAAG,iBAAiB,CAAC,SAAS,CAAC,eAAe,CAAC;AAEpG,UAAU,wBAAyB,SAAQ,QAAQ,CAAC,YAAY,CAAC;IAC/D,OAAO,CAAC,EAAE,OAAO,CAAC;IAClB,QAAQ,CAAC,EAAE,MAAM,CAAC;CACnB;;kBAiBe,wBAAwB;qBAGrB,wBAAwB;qBAGxB,wBAAwB;mBAG1B,wBAAwB;kBAGzB,wBAAwB;;AAbxC,wBAqBE","file":"index.d.ts","sourcesContent":["import { MessageType, MessageProps } from './message.interface';\nimport { getInstance } from '../common/utils';\n\ntype Context = WechatMiniprogram.Page.TrivialInstance | WechatMiniprogram.Component.TrivialInstance;\n\ninterface MessageActionOptionsType extends Optional<MessageProps> {\n  context?: Context;\n  selector?: string;\n}\n\nconst showMessage = function (options: MessageActionOptionsType, theme: MessageType = MessageType.info) {\n  const { context, selector = '#t-message', ...otherOptions } = options;\n  const instance = getInstance(context, selector);\n\n  if (instance) {\n    instance.resetData(() => {\n      instance.setData({ theme, ...otherOptions }, instance.show.bind(instance));\n    });\n\n    return instance;\n  }\n  console.error('未找到组件,请确认 selector && context 是否正确');\n};\n\nexport default {\n  info(options: MessageActionOptionsType) {\n    return showMessage(options, MessageType.info);\n  },\n  success(options: MessageActionOptionsType) {\n    return showMessage(options, MessageType.success);\n  },\n  warning(options: MessageActionOptionsType) {\n    return showMessage(options, MessageType.warning);\n  },\n  error(options: MessageActionOptionsType) {\n    return showMessage(options, MessageType.error);\n  },\n  hide(options: MessageActionOptionsType) {\n    const { context, selector = '#t-message' } = { ...options };\n    const instance = getInstance(context, selector);\n    if (!instance) {\n      return;\n    }\n    instance.hide();\n  },\n};\n"]}