{"version":3,"sources":["../../src/tag/tag.ts"],"names":[],"mappings":";AAAA,OAAO,EAAe,cAAc,EAAE,MAAM,qBAAqB,CAAC;AASlE,MAAM,CAAC,OAAO,OAAO,GAAI,SAAQ,cAAc;IAC7C,IAAI;;;;;MAKF;IAEF,UAAU,8BAAS;IAEnB,eAAe,WAAgC;IAE/C,OAAO,EAAE,iBAAiB,CAAC,SAAS,CAAC,gBAAgB,CAGnD;IAEF,SAAS;;MAKP;IAEF,SAAS;;;;MAcP;IAEF,OAAO;;;uBA4BU,kBAAkB,SAAS;uBAK3B,kBAAkB,SAAS;MAI1C;CACH","file":"tag.d.ts","sourcesContent":["import { wxComponent, SuperComponent } from '../common/src/index';\nimport config from '../common/config';\nimport props from './props';\nimport { classNames, isNumber, calcIcon } from '../common/utils';\n\nconst { prefix } = config;\nconst name = `${prefix}-tag`;\n\n@wxComponent()\nexport default class Tag extends SuperComponent {\n  data = {\n    prefix,\n    classPrefix: name,\n    className: '',\n    tagStyle: '',\n  };\n\n  properties = props;\n\n  externalClasses = ['class', `${prefix}-class`];\n\n  options: WechatMiniprogram.Component.ComponentOptions = {\n    multipleSlots: true,\n    styleIsolation: 'apply-shared',\n  };\n\n  lifetimes = {\n    attached() {\n      this.setClass();\n      this.setTagStyle();\n    },\n  };\n\n  observers = {\n    'size, shape, theme, variant, closable, disabled'() {\n      this.setClass();\n    },\n\n    maxWidth() {\n      this.setTagStyle();\n    },\n\n    icon(v) {\n      this.setData({\n        _icon: calcIcon(v),\n      });\n    },\n  };\n\n  methods = {\n    setClass() {\n      const { prefix, classPrefix } = this.data;\n      const { size, shape, theme, variant, closable, disabled } = this.properties;\n      const tagClass = [\n        classPrefix,\n        `${classPrefix}--${theme || 'default'}`,\n        `${classPrefix}--${variant}`,\n        closable ? `${classPrefix}--closable ${prefix}-is-closable` : '',\n        disabled ? `${classPrefix}--disabled ${prefix}-is-disabled` : '',\n        `${classPrefix}--${size}`,\n        `${classPrefix}--${shape}`,\n      ];\n      const className = classNames(tagClass);\n      this.setData({\n        className,\n      });\n    },\n\n    setTagStyle() {\n      const { maxWidth } = this.properties;\n      if (!maxWidth) {\n        return '';\n      }\n      const width = isNumber(maxWidth) ? `${maxWidth}px` : maxWidth;\n      this.setData({ tagStyle: `max-width:${width};` });\n    },\n\n    handleClick(e: WechatMiniprogram.BaseEvent) {\n      if (this.data.disabled) return;\n      this.triggerEvent('click', e);\n    },\n\n    handleClose(e: WechatMiniprogram.BaseEvent) {\n      if (this.data.disabled) return;\n      this.triggerEvent('close', e);\n    },\n  };\n}\n"]}