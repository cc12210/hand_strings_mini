{"version":3,"sources":["../../src/picker-item/picker-item.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAe,gBAAgB,EAAE,MAAM,qBAAqB,CAAC;AAmBpF,MAAM,CAAC,OAAO,OAAO,UAAW,SAAQ,cAAc;IACpD,SAAS,EAAE,gBAAgB,CAIzB;IAEF,eAAe,WAAgC;IAE/C,UAAU,qCAAS;IAEnB,SAAS;sBACO,UAAU;MAGxB;IAEF,IAAI;;;;;;;MAOF;IAEF,OAAO;;;;;;;MAyEL;IAEF;;;OAGG;IACH,mBAAmB,CAAC,WAAW,EAAE,MAAM,GAAG,MAAM;IAIhD,OAAO;CAKR","file":"picker-item.d.ts","sourcesContent":["import { SuperComponent, wxComponent, RelationsOptions } from '../common/src/index';\nimport config from '../common/config';\nimport props from './props';\n\nconst { prefix } = config;\nconst name = `${prefix}-picker-item`;\n\nconst itemHeight = 80;\nconst DefaultDuration = 240;\n\nconst { windowWidth } = wx.getSystemInfoSync();\n\nconst rpx2px = (rpx) => Math.floor((windowWidth * rpx) / 750);\n\nconst range = function (num: number, min: number, max: number) {\n  return Math.min(Math.max(num, min), max);\n};\n\n@wxComponent()\nexport default class PickerItem extends SuperComponent {\n  relations: RelationsOptions = {\n    '../picker/picker': {\n      type: 'parent',\n    },\n  };\n\n  externalClasses = ['class', `${prefix}-class`];\n\n  properties = props;\n\n  observers = {\n    options(this: PickerItem) {\n      this.update();\n    },\n  };\n\n  data = {\n    prefix,\n    classPrefix: name,\n    offset: 0, // 滚动偏移量\n    duration: 0, // 滚动动画延迟\n    value: '',\n    curIndex: 0,\n  };\n\n  methods = {\n    onTouchStart(event) {\n      this.StartY = event.touches[0].clientY;\n      this.StartOffset = this.data.offset;\n      this.setData({ duration: 0 });\n    },\n\n    onTouchMove(event) {\n      const { StartY, StartOffset, itemHeight } = this;\n\n      // touch偏移增量\n      const touchDeltaY = event.touches[0].clientY - StartY;\n      const deltaY = this.calculateViewDeltaY(touchDeltaY);\n\n      this.setData({\n        offset: range(StartOffset + deltaY, -(this.getCount() * itemHeight), 0),\n        duration: DefaultDuration,\n      });\n    },\n\n    onTouchEnd() {\n      const { offset } = this.data;\n      const { options } = this.properties;\n\n      if (offset === this.StartOffset) {\n        return;\n      }\n      // 调整偏移量\n      const index = range(Math.round(-offset / this.itemHeight), 0, this.getCount() - 1);\n      this.setData({\n        curIndex: index,\n        offset: -index * this.itemHeight,\n      });\n\n      if (index === this._selectedIndex) {\n        return;\n      }\n\n      wx.nextTick(() => {\n        this._selectedIndex = index;\n        this._selectedValue = options[index]?.value;\n        this._selectedLabel = options[index]?.label;\n        this.$parent?.triggerColumnChange({\n          index,\n          column: this.columnIndex || 0,\n        });\n      });\n    },\n\n    // 刷新选中状态\n    update() {\n      const { options, value } = this.data;\n\n      const index = options.findIndex((item) => item.value === value);\n      const selectedIndex = index > 0 ? index : 0;\n\n      this.setData({\n        offset: -selectedIndex * this.itemHeight,\n        curIndex: selectedIndex,\n      });\n\n      this._selectedIndex = selectedIndex;\n      this._selectedValue = options[selectedIndex]?.value;\n      this._selectedLabel = options[selectedIndex]?.label;\n    },\n\n    resetOrigin() {\n      this.update();\n    },\n\n    getCount() {\n      return this.data?.options?.length;\n    },\n  };\n\n  /**\n   * 将屏幕滑动距离换算为视图偏移量 模拟渐进式滚动\n   * @param touchDeltaY 屏幕滑动距离\n   */\n  calculateViewDeltaY(touchDeltaY: number): number {\n    return Math.abs(touchDeltaY) > itemHeight ? 1.2 * touchDeltaY : touchDeltaY;\n  }\n\n  created() {\n    this.StartY = 0;\n    this.StartOffset = 0;\n    this.itemHeight = rpx2px(itemHeight);\n  }\n}\n"]}