{"version":3,"sources":["../../src/tab-bar/tab-bar.ts"],"names":[],"mappings":"AAAA,OAAO,EAAe,cAAc,EAAE,gBAAgB,EAAE,MAAM,qBAAqB,CAAC;AAQpF,MAAM,CAAC,OAAO,OAAO,MAAO,SAAQ,cAAc;IAChD,SAAS,EAAE,gBAAgB,CAIzB;IAEF,eAAe,WAAuB;IAEtC,WAAW,SAAM;IAEjB,IAAI;;;MAGF;IAEF,UAAU,iCAAS;IAEnB,eAAe;;;QAKb;IAEF,SAAS;;MAIP;IAEF,SAAS;;MAIP;IAEF,OAAO;;;;;;MAmCL;CACH","file":"tab-bar.d.ts","sourcesContent":["import { wxComponent, SuperComponent, RelationsOptions } from '../common/src/index';\nimport config from '../common/config';\nimport props from './props';\n\nconst { prefix } = config;\nconst classPrefix = `${prefix}-tab-bar`;\n\n@wxComponent()\nexport default class Tabbar extends SuperComponent {\n  relations: RelationsOptions = {\n    '../tab-bar-item/tab-bar-item': {\n      type: 'descendant',\n    },\n  };\n\n  externalClasses = [`${prefix}-class`];\n\n  backupValue = -1;\n\n  data = {\n    prefix,\n    classPrefix,\n  };\n\n  properties = props;\n\n  controlledProps = [\n    {\n      key: 'value',\n      event: 'change',\n    },\n  ];\n\n  observers = {\n    value() {\n      this.updateChildren();\n    },\n  };\n\n  lifetimes = {\n    ready() {\n      this.showChildren();\n    },\n  };\n\n  methods = {\n    showChildren() {\n      const { value } = this.data;\n\n      this.$children.forEach((child) => {\n        if (child.properties.value === value) {\n          child.showSpread();\n          child.setData({ crowded: this.$children > 3 });\n        }\n      });\n    },\n\n    updateChildren() {\n      const { value } = this.data;\n\n      this.$children.forEach((child) => {\n        child.checkActive(value);\n      });\n    },\n\n    updateValue(value) {\n      this._trigger('change', { value });\n    },\n\n    changeOtherSpread(value) {\n      this.$children.forEach((child) => {\n        if (child.properties.value !== value) {\n          child.closeSpread();\n        }\n      });\n    },\n\n    initName() {\n      return (this.backupValue += 1);\n    },\n  };\n}\n"]}