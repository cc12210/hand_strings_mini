{"version":3,"sources":["../../src/checkbox/checkbox.ts"],"names":[],"mappings":"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","file":"checkbox.js","sourcesContent":["import { SuperComponent, wxComponent, ComponentsOptionsType, RelationsOptions } from '../common/src/index';\nimport config from '../common/config';\nimport Props from './props';\n\nconst { prefix } = config;\nconst name = `${prefix}-checkbox`;\n@wxComponent()\nexport default class CheckBox extends SuperComponent {\n  externalClasses = [\n    `${prefix}-class`,\n    `${prefix}-class-label`,\n    `${prefix}-class-icon`,\n    `${prefix}-class-content`,\n    `${prefix}-class-border`,\n  ];\n\n  behaviors = ['wx://form-field'];\n\n  relations: RelationsOptions = {\n    '../checkbox-group/checkbox-group': {\n      type: 'ancestor',\n      linked(parent) {\n        const { value, disabled, borderless } = parent.data;\n        const valueSet = new Set(value);\n        const data: any = {\n          disabled: disabled || this.data.disabled,\n        };\n\n        if (borderless) {\n          data.borderless = true;\n        }\n\n        data.checked = valueSet.has(this.data.value);\n\n        if (this.data.checkAll) {\n          data.checked = valueSet.size > 0;\n          // data.indeterminate =\n        }\n\n        this.setData(data);\n      },\n    },\n  };\n\n  options: ComponentsOptionsType = {\n    multipleSlots: true,\n    // styleIsolation: 'shared',\n  };\n\n  properties = {\n    ...Props,\n    theme: {\n      type: String,\n      value: 'default',\n    },\n    borderless: {\n      type: Boolean,\n      value: false,\n    },\n  };\n\n  data = {\n    prefix,\n    classPrefix: name,\n  };\n\n  controlledProps = [\n    {\n      key: 'checked',\n      event: 'change',\n    },\n  ];\n\n  methods = {\n    onChange(e: WechatMiniprogram.TouchEvent) {\n      const { disabled, readonly } = this.data;\n\n      if (disabled || readonly) return;\n\n      const { target } = e.currentTarget.dataset;\n      const { contentDisabled } = this.data;\n\n      if (target === 'text' && contentDisabled) {\n        return;\n      }\n\n      const checked = !this.data.checked;\n      const parent = this.$parent;\n\n      if (parent) {\n        parent.updateValue({ ...this.data, checked });\n      } else {\n        this._trigger('change', { checked });\n      }\n    },\n  };\n}\n"]}