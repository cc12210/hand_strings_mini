{"version":3,"sources":["../../src/avatar/avatar.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,cAAc,EAAe,gBAAgB,EAAE,MAAM,qBAAqB,CAAC;AASpF,MAAM,CAAC,OAAO,OAAO,MAAO,SAAQ,cAAc;IAChD,OAAO,EAAE,iBAAiB,CAAC,SAAS,CAAC,gBAAgB,CAGnD;IAEF,eAAe,WAOb;IAEF,UAAU,iCAAe;IAEzB,IAAI;;;;;MAKF;IAEF,SAAS,EAAE,gBAAgB,CAWzB;IAEF,SAAS;;MAOP;IAEF,OAAO;;;uBAWU,6BAA6B;MAQ5C;CACH","file":"avatar.d.ts","sourcesContent":["import { SuperComponent, wxComponent, RelationsOptions } from '../common/src/index';\nimport config from '../common/config';\nimport avatarProps from './props';\nimport { setIcon } from '../common/utils';\n\nconst { prefix } = config;\nconst name = `${prefix}-avatar`;\n\n@wxComponent()\nexport default class Avatar extends SuperComponent {\n  options: WechatMiniprogram.Component.ComponentOptions = {\n    multipleSlots: true,\n    styleIsolation: 'apply-shared',\n  };\n\n  externalClasses = [\n    'class',\n    `${prefix}-class`,\n    `${prefix}-class-image`,\n    `${prefix}-class-icon`,\n    `${prefix}-class-alt`,\n    `${prefix}-class-content`,\n  ];\n\n  properties = avatarProps;\n\n  data = {\n    prefix,\n    classPrefix: name,\n    isShow: true,\n    zIndex: 0,\n  };\n\n  relations: RelationsOptions = {\n    '../avatar-group/avatar-group': {\n      type: 'ancestor',\n      linked(parent) {\n        this.parent = parent;\n\n        this.setData({\n          size: this.data.size ?? parent.data.size,\n        });\n      },\n    },\n  };\n\n  observers = {\n    icon(icon) {\n      const obj = setIcon('icon', icon, '');\n      this.setData({\n        ...obj,\n      });\n    },\n  };\n\n  methods = {\n    hide() {\n      this.setData({\n        isShow: false,\n      });\n    },\n\n    updateCascading(zIndex) {\n      this.setData({ zIndex });\n    },\n\n    onLoadError(e: WechatMiniprogram.CustomEvent) {\n      if (this.properties.hideOnLoadFailed) {\n        this.setData({\n          isShow: false,\n        });\n      }\n      this.triggerEvent('error', e.detail);\n    },\n  };\n}\n"]}